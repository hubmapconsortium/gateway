# Port 80 on host maps to 8080 on container
server {
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    listen 8080;
    server_name cells.api.hubmapconsortium.org;
    
    location / {
        return 301 https://$host$request_uri;
    }    
}

# Port 443 on host maps to 4430 on container
server {
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    listen 4430 ssl; # managed by Certbot
    server_name cells.api.hubmapconsortium.org;
    root /usr/share/nginx/html;

    ssl_certificate /etc/letsencrypt/live/gateway.api.hubmapconsortium.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gateway.api.hubmapconsortium.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    
    # Logging to the mounted volume for outside container access
    access_log /usr/src/app/log/nginx_access_cells-api.log;
    error_log /usr/src/app/log/nginx_error_cells-api.log warn;

    location / {
        # Only the PROD version of cells api is routed by gateway
        # The cells api on DEV and TEST are running on their own nginx instances, no STAGE version
        # Calls to the PROD version of cells api (cells.api.hubmapconsortium.org) come to 
        # gateway directly and get forwarded to their nginx gateway/load balancer http://cells-gateway.cmu.hubmapconsortium.org (no https)
        proxy_pass http://cells-gateway.cmu.hubmapconsortium.org;
        
        # Increase timeout to 10 minutes until a real solution is ready
        proxy_connect_timeout 600;
        keepalive_timeout 600 600;
        proxy_read_timeout 600;
        proxy_send_timeout 600;
    }

}
