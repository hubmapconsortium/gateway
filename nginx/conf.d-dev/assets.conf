server {
    # The hubmap-auth service listens port 81 on it's container
    listen 81;
    
    server_name localhost;
    root /usr/src/assets;

    # Logging to the mounted volume for outside container access
    access_log /usr/src/app/log/nginx_access_assets.log;
    error_log /usr/src/app/log/nginx_error_assets.log warn;
    
    location = /favicon.ico {
        alias /usr/share/nginx/html/favicon.ico;
    }
    
    # Exact request URI matching
    location = /file_auth {
        internal;
        # Upstream hubmap-auth server
        # The `hubmap-auth-server` upstream is defined in `hubmap-auth.conf`
        # We can specify the endpoint `file_auth` here but not in the upstream definition
        proxy_pass http://hubmap-auth-server/file_auth;
        # No need to send the POST body
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-Request-Method $request_method;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location / {
        # Enable CORS 
        # Response to preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
            
            # Custom headers and headers various browsers should be OK with but aren't
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            # Cache the response to this preflight request in browser for 24 hours (86400 seconds) 
            # without sending another preflight request
            add_header 'Access-Control-Max-Age' 86400;
            
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Response to the original requests (HTTP methods are case-sensitive) with CORS enabled
        if ($request_method ~ (POST|GET|PUT)) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        
        # Send all requests to the '/file_auth' endpoint for authentication and authorization   
        auth_request /file_auth;

        # Once authenticated/authorized, allow file access
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        autoindex on;
    }

}