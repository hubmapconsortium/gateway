# Subdomain resolve
server {
    listen 80;
    server_name assets.test.hubmapconsortium.org;
    
    location / {
        return 301 https://$host$request_uri;
    }    
}

# SSL on port 443
server {
    listen 443 ssl; # managed by Certbot
    server_name assets.test.hubmapconsortium.org;
    
    # This directory will be mountes from host to docker
    root /usr/src/assets;

    ssl_certificate /etc/letsencrypt/live/gateway.test.hubmapconsortium.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gateway.test.hubmapconsortium.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Logging to the mounted volume for outside container access
    access_log /usr/src/app/log/nginx_access_assets.log;
    error_log /usr/src/app/log/nginx_error_assets.log warn;
    
    location = /favicon.ico {
        alias /usr/share/nginx/html/favicon.ico;
    }

    location / {
        # Enable CORS 
        # Response to preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
            
            # Custom headers and headers various browsers should be OK with but aren't
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            
            # Cache the response to this preflight request in browser for 24 hours (86400 seconds) 
            # without sending another preflight request
            add_header 'Access-Control-Max-Age' 86400;
            
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Response to the original requests (HTTP methods are case-sensitive) with CORS enabled
        if ($request_method ~ (POST|GET|PUT)) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        
        sendfile on;
        sendfile_max_chunk 1m;
        tcp_nopush on;
        autoindex on;
    }
}
