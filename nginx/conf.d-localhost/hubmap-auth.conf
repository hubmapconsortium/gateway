# Define the upstream hubmap-auth server to be used by other API nginx configs
# This sever will be accessed via `http://hubmap-auth-server/api_auth` in other conf files
# We use "localhost:8080" because port 8080 is exposed on `hubmap-auth` container for nginx
upstream hubmap-auth-server {
    # hubmap-auth:8080/api_auth is invalid syntax
    server localhost:8080;
}

# Port 8080 on host maps to 8080 on container
server {
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    listen 8080;
    
    server_name localhost;
    root /usr/share/nginx/html;

    # Logging to the mounted volume for outside container access
    # Use the upstream_log log_format defiend in the main nginx.conf for better debugging
    access_log /usr/src/app/log/nginx_access_gateway.log upstream_log;
    error_log /usr/src/app/log/nginx_error_gateway.log warn;
    
    location = /favicon.ico {
        alias /usr/share/nginx/html/favicon.ico;
    }
    
    # HTTP requests get passed to the uwsgi server using the "uwsgi" protocol on port 5000
    location / { 
        # Always enable CORS 
        # Response to preflight requests
        if ($request_method = 'OPTIONS') {
            # The directive `add_header` doesn't work when response status code is 401, 403 or 500
            # The `always` parameter is specified so the header field will be added regardless of the response code
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
            
            # Custom headers and headers various browsers should be OK with but aren't
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            
            # Cache the response to this preflight request in browser for 24 hours (86400 seconds) 
            # without sending another preflight request
            add_header 'Access-Control-Max-Age' 86400 always;
            
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # Response to the original requests (HTTP methods are case-sensitive) with CORS enabled
        if ($request_method ~ (POST|GET|PUT)) {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,Authorization, MAuthorization,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }
        
        include uwsgi_params;
        # Use IP v4 "127.0.0.1" instead of "localhost" to avoid 502 error caused by DNS failure
        uwsgi_pass uwsgi://127.0.0.1:5000;
    }

}